# This file contains configuration for audit logging. Usually the path to this file is passed to the application
# using "talend.logging.audit.config" system property. The default location is "classpath:/audit.properties".
# Placeholders are supported with format ${name} or ${name:defaultValue}. Name will be resolved against system properties.
# If not found, then an environment variable with name converted to upper case replacing dots with underscores (for example
# java.home will be replaced with JAVA_HOME). If a such environment variable doesn't exist, the default value will be
# used. If default value not provided then an instance of AuditLoggingException will be thrown.
# Logger name prefix which will be added to event category (logger name in terms of slf4j).
#
# For example, if "root.logger=audit" then logging an audit event with category "activity" with result in
# logger name "audit.activity" being used.
#
# Also all appenders will be configured on this logger, and it can be used to distinguish between audit events and
# all other events.
root.logger=audit
# Configures logging backend to be used. Can be either auto, logback or log4j1. If it's auto then audit library will
# try to detect which logging library is present and use it. By default it's auto.
#backend=logback
# Defines which encoding to be used when writing events using appenders. By default UTF-8
encoding=UTF-8
# Name of the application which logs audit event (this value will be put into MDC for each logged event).
### application.name=Test
application.name=auditlog-generator
# Name of the service within the application which logs audit event (this value will be put into MDC for each logged event).
service.name=ServiceA
# Name of the instance of the service (this value will be put into MDC for each logged event).
instance.name=TestInstance1
# Defines behaviour of API calls if one or more appenders could not process the event.
# Possible values: none, all
propagate.appender.exceptions=none
# Type of log appender to use (multiple appenders can be used simultaneously if provided as a comma-separated list).
# Possible values: socket, file, console
### log.appender=http,file
log.appender=file
# File appender puts log entries into a json file. In most cases there should be a FileBeat instance picking up
# new messages and sending them to logstash.
### appender.file.path=${audit.log.folder}/audit.json
appender.file.path=auditlogs/audit.json
appender.file.maxsize=52428800
appender.file.maxbackup=20
# Socket appender sends logs to a remote host, where usually logstash receives and processes them.
# Warning: this appender is DEPRECATED
#appender.socket.host=localhost
#appender.socket.port=8056
# Http appender sends logs via http requests.
appender.http.url=http://localhost:8057/
#appender.http.username=talendlogs
#appender.http.password=tpsvclogs
#appender.http.async=false
#appender.http.connect.timeout=30000
#appender.http.read.timeout=60000
# If true, location info (file, line, etc) will be included into the stack trace (when logging an exception).
# By default: false.
#location=true
